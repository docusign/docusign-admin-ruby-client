=begin
#DocuSign Admin API

#An API for an organization administrator to manage organizations, accounts and users

OpenAPI spec version: v2.1
Contact: devcenter@docusign.com
Generated by: https://github.com/swagger-api/swagger-codegen.git

=end

require "uri"

module DocuSign_Admin


  class ReservedDomainsApi
    attr_accessor :api_client

    def initialize(api_client = ReservedDomainsApi.default)
      @api_client = api_client
    end

    # Returns the list of reserved domains for the organization.
    # Required scopes: domain_read
    # @param organization_id The organization ID Guid
    # @return [DomainsResponse]
    def get_reserved_domains(organization_id)
      data, _status_code, _headers = get_reserved_domains_with_http_info(organization_id)
      return data
    end

    # Returns the list of reserved domains for the organization.
    # Required scopes: domain_read
    # @param organization_id The organization ID Guid
    # @return [Array<(DomainsResponse, Fixnum, Hash)>] DomainsResponse data, response status code and response headers
    def get_reserved_domains_with_http_info(organization_id)
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: ReservedDomainsApi.get_reserved_domains ..."
      end
      # verify the required parameter 'organization_id' is set
      fail ArgumentError, "Missing the required parameter 'organization_id' when calling ReservedDomainsApi.get_reserved_domains" if organization_id.nil?
      # resource path
      local_var_path = "/v2/organizations/{organizationId}/reserved_domains".sub('{format}','json').sub('{' + 'organizationId' + '}', organization_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'DomainsResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ReservedDomainsApi#get_reserved_domains\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end